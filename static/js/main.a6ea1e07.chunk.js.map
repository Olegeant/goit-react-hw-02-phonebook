{"version":3,"sources":["components/Form/Form.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onSubmit","children","autoComplete","ContactListItem","id","name","number","onDelete","type","onClick","ContactList","contacts","map","App","initialState","filter","state","handleInputChange","evt","target","setState","value","addContact","preventDefault","some","contact","toLowerCase","alert","newContact","uuidv4","resetForm","deleteContact","this","filteredContacts","includes","title","onChange","pattern","required","htmlFor","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ea1e07.chunk.js","sourcesContent":["function Form({ onSubmit, children }) {\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={onSubmit}>\r\n      {children}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","function ContactListItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <li>\r\n      <span>\r\n        {name}: {number}\r\n      </span>\r\n      <button type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactListItem;\r\n","import ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Form from './components/Form/Form';\nimport Input from './components/Input/Input';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  initialState = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  state = this.initialState;\n\n  handleInputChange = evt => {\n    const target = evt.target;\n\n    this.setState({ [target.name]: target.value });\n  };\n\n  addContact = evt => {\n    evt.preventDefault();\n\n    const { name, number, contacts } = this.state;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts!`);\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '', filter: '' });\n  };\n\n  deleteContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { name, number, contacts, filter } = this.state;\n    const { handleInputChange, addContact, deleteContact } = this;\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n\n    return (\n      <>\n        <Form title=\"Phonebook\" onSubmit={addContact}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n\n          <label htmlFor=\"name\">Name</label>\n\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n\n          <label htmlFor=\"number\">Number</label>\n\n          <button type=\"submit\">Add Contact</button>\n        </Form>\n\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleInputChange}\n        />\n\n        <ContactList\n          title=\"Contacts\"\n          contacts={filteredContacts}\n          onDelete={deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}